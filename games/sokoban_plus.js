/*
@title: sokoban_plus
@author: leonard (omay)
*/
const player = "p";
const traila = "t";
const trailb = "s";
const boxa = "c";
const boxb = "d";
const goala = "a";
const goalb = "b";
const wall = "w";
setLegend(
  [player, bitmap`
................
................
.....000000.....
....00....00....
...00......00...
...0..0..0..0...
...0........0...
...00..00..00...
....00....00....
.....000000.....
.....0....0.....
.....0....0.....
...000....000...
................
................
................`],
  [traila, bitmap`
................
................
.....LLLLLL.....
....LL....LL....
...LL......LL...
...L..L..L..L...
...L........L...
...LL..LL..LL...
....LL....LL....
.....LLLLLL.....
.....L....L.....
.....L....L.....
...LLL....LLL...
................
................
................`],
  [trailb, bitmap`
................
................
.....111111.....
....11....11....
...11......11...
...1..1..1..1...
...1........1...
...11..11..11...
....11....11....
.....111111.....
.....1....1.....
.....1....1.....
...111....111...
................
................
................`],
  [boxa, bitmap`
................
................
..777777777777..
..7..........7..
..7..........7..
..7..........7..
..7....77....7..
..7...7..7...7..
..7...7777...7..
..7...7..7...7..
..7..........7..
..7..........7..
..7..........7..
..777777777777..
................
................`],
  [boxb, bitmap`
................
................
..888888888888..
..8..........8..
..8..........8..
..8....88....8..
..8....8.8...8..
..8....88....8..
..8....8.8...8..
..8....8.8...8..
..8....88....8..
..8..........8..
..8..........8..
..888888888888..
................
................`],
  [goala, bitmap`
................
................
................
......4444......
....444..444....
....4......4....
...44..44..44...
...4..4..4..4...
...4..4444..4...
...44.4..4.44...
....4......4....
....444..444....
......4444......
................
................
................`],
  [wall, bitmap`
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000`],
  [goalb, bitmap`
................
................
................
......3333......
....333..333....
....3..33..3....
...33..3.3.33...
...3...33...3...
...3...3.3..3...
...33..3.3.33...
....3..33..3....
....333..333....
......3333......
................
................
................`]);
let level = 0;
const levels = [
  map`
pc.a`,
  map`
p..
.c.
..a`,
  map`
p..a
.c..
....
....`,
  map`
p...
...c
...c
.cca`,
  map`
cc..
..c.
.cp.
.cca`,
  map`
p.w.
.cwa
....
..ca`,
  map`
p.ca
.www
dwww
bwww`,
  map`
a..p
w.wd
wcw.
wp.b`,
  map`
...wb
.w.w.
.ca.d
.w.w.
pw...`,
  map`
.aw.p
..wdc
b.w.a
dcw..
p.wb.`,
  map`
b..w..a
.d.w.c.
..pwp..
wwwwwww
..pwp..
.c.w.d.
a..w..b`
];
const currentLevel = levels[level];
setMap(currentLevel);
setSolids([player, boxa, boxb, wall]);
setPushables({
  [player]: [boxa, boxb],
  [boxa]: [boxa, boxb],
  [boxb]: [boxa, boxb]
});
const playerstep = tune`
166.66666666666666,
166.66666666666666: a4^166.66666666666666,
5000`;
const bg = tune` 
379.746835443038: d4^379.746835443038 + c5~379.746835443038,
379.746835443038: b4~379.746835443038 + e4^379.746835443038 + g5/379.746835443038,
379.746835443038: c5~379.746835443038,
379.746835443038: d5~379.746835443038 + f4^379.746835443038 + b5/379.746835443038,
379.746835443038: e5~379.746835443038 + g5/379.746835443038,
379.746835443038: e4^379.746835443038 + a5/379.746835443038,
379.746835443038: d5~379.746835443038,
379.746835443038: c5~379.746835443038 + d4^379.746835443038 + g5/379.746835443038,
379.746835443038: b4~379.746835443038,
379.746835443038: b5/379.746835443038,
379.746835443038: g5/379.746835443038,
379.746835443038: b4~379.746835443038 + f4^379.746835443038 + a5/379.746835443038,
379.746835443038: c5~379.746835443038,
379.746835443038: d5~379.746835443038 + e4^379.746835443038,
379.746835443038: g5/379.746835443038,
379.746835443038: b4~379.746835443038 + d4^379.746835443038 + b5/379.746835443038,
379.746835443038: a4~379.746835443038 + g5/379.746835443038,
379.746835443038: g4~379.746835443038 + c4^379.746835443038 + a5/379.746835443038,
379.746835443038: g5/379.746835443038 + a4~379.746835443038 + d4^379.746835443038,
379.746835443038: g4~379.746835443038,
379.746835443038: g5/379.746835443038 + e4^379.746835443038,
379.746835443038: a4~379.746835443038,
379.746835443038: b5/379.746835443038 + f4^379.746835443038 + b4~379.746835443038,
379.746835443038: g5/379.746835443038 + c5~379.746835443038,
379.746835443038: a5/379.746835443038 + e4^379.746835443038 + d5~379.746835443038,
379.746835443038,
379.746835443038: d4^379.746835443038 + c5~379.746835443038,
379.746835443038: g5/379.746835443038 + b4~379.746835443038,
379.746835443038: c4^379.746835443038 + a4~379.746835443038,
379.746835443038: b5/379.746835443038 + d4^379.746835443038,
379.746835443038: g5/379.746835443038 + e4^379.746835443038 + a4~379.746835443038,
379.746835443038: a5/379.746835443038 + f4^379.746835443038 + b4~379.7468354430388`;
const reset = tune`
166.66666666666666,
166.66666666666666: c5-166.66666666666666,
166.66666666666666: b4-166.66666666666666,
4833.333333333333`;
const cont = tune`
500,
500: c5~500,
500: d5~500,
500: e5~500,
14000`;
const win = tune`
166.66666666666666,
166.66666666666666: c5~166.66666666666666,
166.66666666666666: d5~166.66666666666666,
166.66666666666666: e5~166.66666666666666,
166.66666666666666: b4~166.66666666666666,
166.66666666666666: c5~166.66666666666666,
166.66666666666666: d5~166.66666666666666,
166.66666666666666: e5~166.66666666666666,
166.66666666666666: d5~166.66666666666666,
166.66666666666666: c5~166.66666666666666,
166.66666666666666,
166.66666666666666: b4~166.66666666666666,
166.66666666666666: e5~166.66666666666666,
166.66666666666666: c5~166.66666666666666,
3000`;
playTune(bg, Infinity);
// START - PLAYER MOVEMENT CONTROLS
function everyMove() {
  let trailsb = getAll(trailb);
  for (let i of trailsb) {
    i.remove();
  }
  let trailsa = getAll(traila);
  for (i of trailsa) {
    i.type = trailb;
  }
  playTune(playerstep);
}
onInput("s", () => {
  let players = getAll(player);
  everyMove();
  for (let i of players) {
    addSprite(i.x, i.y, traila);
    i.y += 1;
  }
});
onInput("d", () => {
  let players = getAll(player);
  everyMove();
  for (let i of players) {
    addSprite(i.x, i.y, traila);
    i.x += 1;
  }
});
onInput("w", () => {
  let players = getAll(player);
  everyMove();
  for (let i of players) {
    addSprite(i.x, i.y, traila);
    i.y -= 1;
  }
});
onInput("a", () => {
  let players = getAll(player);
  everyMove();
  for (let i of players) {
    addSprite(i.x, i.y, traila);
    i.x -= 1;
  }
});
// END - PLAYER MOVEMENT CONTROLS
onInput("j", () => {
  const currentLevel = levels[level];
  playTune(reset);
  if (currentLevel !== undefined) {
    clearText("");
    setMap(currentLevel);
  }
});
afterInput(() => {
  // count the number of tiles with goals
  const targetNumber = tilesWith(goala).length + tilesWith(goalb).length;
  // count the number of tiles with goals and boxes
  const numberCovered = tilesWith(goala, boxa).length + tilesWith(goalb, boxb).length;
  if (numberCovered === targetNumber) {
    // increase the current level number
    level = level + 1;
    const currentLevel = levels[level];
    playTune(cont);
    // make sure the level exists and if so set the map
    if (currentLevel !== undefined) {
      setMap(currentLevel);
    } else {
      addText("You win!", {
        y: 4,
        color: [0, 255, 0]
      });
      playTune(win);
    }
  }
});